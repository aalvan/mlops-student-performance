name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python and install dependencies
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies with Pipenv
        run: |
          pip install pipenv
          pipenv install --dev

      # Run FastAPI unit and integration tests
      - name: Run FastAPI unit tests
        run: |
          cd src/web_service/fastapi
          pipenv run pytest tests/unit

      - name: Run FastAPI integration tests
        run: |
          cd src/web_service/fastapi
          pipenv run pytest tests/integration

      # Build Docker images for FastAPI and Streamlit
      - name: Build FastAPI Docker image
        run: |
          cd src/web_service/fastapi
          docker build -t ${{ secrets.DOCKER_USERNAME }}/fastapi:latest .

      - name: Build Streamlit Docker image
        run: |
          cd ../streamlit
          docker build -t ${{ secrets.DOCKER_USERNAME }}/streamlit:latest .

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Push Docker images to Docker Hub
      - name: Push FastAPI Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/fastapi:latest

      - name: Push Streamlit Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/streamlit:latest

      # Optional: Bring up the services with Docker Compose (testing or deployment environment)
      - name: Deploy services with Docker Compose (Optional)
        run: |
          docker-compose -f mlflow.docker-compose.yml up -d
          docker-compose -f src/airflow/airflow.docker-compose.yaml up -d
          docker-compose -f src/monitoring/elk.docker-compose.yml up -d
          docker-compose -f src/web_service/web-service.docker-compose.yml up -d
